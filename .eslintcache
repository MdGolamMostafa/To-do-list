[{"F:\\intern\\todo-list\\src\\reportWebVitals.js":"1","F:\\intern\\todo-list\\src\\App.js":"2","F:\\intern\\todo-list\\src\\index.js":"3","F:\\intern\\todo-list\\src\\components\\ToDoList\\ToDoList.js":"4","F:\\intern\\todo-list\\src\\redux\\reducers\\user.js":"5","F:\\intern\\todo-list\\src\\redux\\store\\store.js":"6","F:\\intern\\todo-list\\src\\components\\ListCom\\ListCom.js":"7","F:\\intern\\todo-list\\src\\components\\Login\\HandleLogin.js":"8","F:\\intern\\todo-list\\src\\components\\Login\\Login.js":"9","F:\\intern\\todo-list\\src\\components\\Login\\ErrorHandler.js":"10"},{"size":362,"mtime":1609553296064,"results":"11","hashOfConfig":"12"},{"size":508,"mtime":1611730890330,"results":"13","hashOfConfig":"12"},{"size":513,"mtime":1611728985249,"results":"14","hashOfConfig":"12"},{"size":1452,"mtime":1611750142662,"results":"15","hashOfConfig":"12"},{"size":314,"mtime":1611725685651,"results":"16","hashOfConfig":"12"},{"size":121,"mtime":1611725685655,"results":"17","hashOfConfig":"12"},{"size":609,"mtime":1611727170932,"results":"18","hashOfConfig":"12"},{"size":4120,"mtime":1608978693839,"results":"19","hashOfConfig":"12"},{"size":7403,"mtime":1611743274526,"results":"20","hashOfConfig":"12"},{"size":1169,"mtime":1608975509715,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"id6pq3",{"filePath":"24","messages":"25","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\intern\\todo-list\\src\\reportWebVitals.js",[],"F:\\intern\\todo-list\\src\\App.js",["44"],"F:\\intern\\todo-list\\src\\index.js",[],["45","46"],"F:\\intern\\todo-list\\src\\components\\ToDoList\\ToDoList.js",[],"F:\\intern\\todo-list\\src\\redux\\reducers\\user.js",[],"F:\\intern\\todo-list\\src\\redux\\store\\store.js",[],"F:\\intern\\todo-list\\src\\components\\ListCom\\ListCom.js",[],"F:\\intern\\todo-list\\src\\components\\Login\\HandleLogin.js",[],"F:\\intern\\todo-list\\src\\components\\Login\\Login.js",["47","48"],"import React, { useEffect, useState } from 'react';\r\nimport { Button, Card, Col, Container, Form, Row } from 'react-bootstrap';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// import { BrowserRouter as useLocation } from 'react-router-dom';\r\nimport FadeLoader from \"react-spinners/FadeLoader\";\r\nimport handleError from './ErrorHandler';\r\nimport InputItem from './InputItem';\r\nimport { createUserWithEmailAndPassword, handleFacebookSignIn, handleGoogleSignIn, initializeFirebase, signInWithEmailAndPassword } from './HandleLogin';\r\nimport { useContext } from 'react';\r\nimport { UserContext } from '../../App';\r\ninitializeFirebase()\r\nconst initUser = {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    errors: {}\r\n}\r\n\r\n\r\n\r\nconst Login = () => {\r\n    const history = useHistory();\r\n    // const location = useLocation();\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n\r\n    // let { from } = location.state || { from: { pathname: \"/\" } };\r\n    const [loading, setLoading] = useState(false)\r\n    const [newUser, setNewUser] = useState(true)\r\n    const [userInfo, setUserInfo] = useState({ ...initUser });\r\n\r\n    const onChangeHandler = e => {\r\n        setUserInfo(previousState => ({ ...previousState, [e.target.name]: e.target.value }))\r\n        e.persist()\r\n    }\r\n\r\n    const submitHandler = e => {\r\n        const errors = handleError(userInfo);\r\n        setUserInfo({ ...userInfo, errors })\r\n        if (Object.keys(errors).length === 0 && newUser) {\r\n        setLoading(true)\r\n        createUserWithEmailAndPassword({ firstName, lastName, email, password })\r\n            .then(res => {\r\n            setLoading(false)\r\n            if (res.error) {\r\n                setUserInfo({ ...userInfo, errors: res })\r\n            } else {\r\n                setLoggedInUser({...res})\r\n                // history.replace(from)\r\n            }\r\n            })\r\n        }\r\n        if (!errors.email && !errors.password) {\r\n        if (userInfo.password && userInfo.email && !newUser) {\r\n            setLoading(true)\r\n            signInWithEmailAndPassword({ email, password })\r\n            .then(res => {\r\n                setLoading(false)\r\n                if (res.error) {\r\n                setUserInfo({ ...userInfo, errors: res })\r\n                } else {\r\n                setLoggedInUser({...res})\r\n                // history.replace(from)\r\n                }\r\n            })\r\n        }\r\n        }\r\n        e.preventDefault();\r\n    }\r\n\r\n    \r\n    const googleSignIn = () => {\r\n        handleGoogleSignIn()\r\n        .then(res => {\r\n            if (res.error) {\r\n            setUserInfo({ ...userInfo, errors: res })\r\n            } else {\r\n            setLoggedInUser({...res})\r\n            // history.replace(from)\r\n            }\r\n        })\r\n    }\r\n\r\n    const facebookSignIn = () => {\r\n        handleFacebookSignIn()\r\n        .then(res => {\r\n            if (res.error) {\r\n            setUserInfo({ ...userInfo, errors: res })\r\n\r\n            } else {\r\n            setLoggedInUser({...res})\r\n                // history.replace(from)\r\n            }\r\n        })\r\n\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        setUserInfo({ ...initUser })\r\n    }, [newUser])\r\n\r\n    useEffect(() => {\r\n        console.log('form login');\r\n    }, [])\r\n    const { firstName, lastName, email, password, confirmPassword, errors } = userInfo;\r\n    // if(loggedInUser){\r\n    //   return <Redirect to ='/'/>\r\n    // }\r\n\r\n\r\n    if (loading) {\r\n        return (\r\n        <div className=\"sweet-loading\">\r\n            <FadeLoader\r\n            size={150}\r\n            loading={loading}\r\n            />\r\n        </div>\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <Container className=\"pr-0 pt-5\">\r\n          <Row>\r\n            <Col sm={8} className=\"m-auto\" xl={6} md=\"8\">\r\n              <Card>\r\n                <Card.Body>\r\n                  <h2 className=\"py-1\">{newUser ? 'Create an account' : 'Login'}</h2>\r\n                  <Form autoComplete=\"off\" onSubmit={submitHandler}>\r\n                    {newUser && (\r\n                      <InputItem value={firstName}\r\n                        onChangeHandler={onChangeHandler}\r\n                        error={errors.firstName}\r\n                        name=\"firstName\"\r\n                        customClass=\"loginInput\" autoFocus\r\n                        placeholder=\"First Name\" />\r\n                    )}\r\n                    {newUser && (\r\n                      <InputItem value={lastName}\r\n                        onChangeHandler={onChangeHandler}\r\n                        error={errors.lastName}\r\n                        name=\"lastName\"\r\n                        customClass=\"loginInput\"\r\n                        placeholder=\"Last Name\" />\r\n                    )}\r\n                    <InputItem value={email}\r\n                      onChangeHandler={onChangeHandler}\r\n                      error={errors.email}\r\n                      name=\"email\"\r\n                      customClass=\"loginInput\"\r\n                      type=\"email\"\r\n                      placeholder=\"Email\" />\r\n                    <InputItem value={password}\r\n                      onChangeHandler={onChangeHandler}\r\n                      error={errors.password}\r\n                      name=\"password\"\r\n                      type=\"password\"\r\n                      customClass=\"loginInput\"\r\n                      placeholder=\"Password\" />\r\n                    {newUser && (\r\n                      <InputItem value={confirmPassword}\r\n                        onChangeHandler={onChangeHandler}\r\n                        type=\"password\"\r\n                        error={errors.confirmPassword}\r\n                        name=\"confirmPassword\"\r\n                        customClass=\"loginInput\"\r\n                        placeholder=\"Confirm Password\" />\r\n                    )}\r\n                    {errors.error && (\r\n                      <p className=\"text-danger text-center  py-2\">\r\n                        {errors.error}\r\n                      </p>\r\n                    )}\r\n                    <Button className=\"w-100\" variant=\"success\" type=\"submit\">\r\n                      {newUser ? 'Create an Account' : 'Login'}\r\n                    </Button>\r\n                  </Form>\r\n                  <p className=\"text-center pt-2\">\r\n                    {newUser ? 'Already have an account' : 'Donâ€™t have an account'} ?\r\n                    <span onClick={() => setNewUser(!newUser)} className=\"text-warning login\">\r\n                      {newUser ? ' Login' : ' Create an account'}\r\n                    </span>\r\n                  </p>\r\n                </Card.Body>\r\n              </Card>\r\n              <div className=\"orr mt-2 w-75 text-center\">Or</div>\r\n\r\n              <div className=\"google-sign-in mt-2 w-75 text-center\" onClick={facebookSignIn}>\r\n                <span> <img className=\"google mr-3 \" src={'https://i.ibb.co/ZXfcXnP/facebook-1.png'} alt=\"facebook\" /> Continue with Facebook </span>\r\n              </div>\r\n              <br />\r\n              <div className=\"google-sign-in mt-2 w-75 text-center\" onClick={googleSignIn}>\r\n                <span> <img className=\"google mr-4 \" src={'https://i.ibb.co/1qyddQc/google-plus.png'} alt=\"google\" /> Continue with google </span>\r\n              </div>\r\n              <br />\r\n              <br />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Login;","F:\\intern\\todo-list\\src\\components\\Login\\ErrorHandler.js",[],{"ruleId":"49","severity":2,"message":"50","line":12,"column":6,"nodeType":"51","endLine":12,"endColumn":11},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":25,"column":11,"nodeType":"58","messageId":"59","endLine":25,"endColumn":18},{"ruleId":"56","severity":1,"message":"60","line":27,"column":12,"nodeType":"58","messageId":"59","endLine":27,"endColumn":24},"react/jsx-no-undef","'Login' is not defined.","JSXIdentifier","no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'loggedInUser' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]